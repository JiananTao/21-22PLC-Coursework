-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from StqlGrammar.y
-----------------------------------------------------------------------------

state 26 contains 1 shift/reduce conflicts.
state 32 contains 1 shift/reduce conflicts.
state 39 contains 1 shift/reduce conflicts.
state 40 contains 5 shift/reduce conflicts.
state 41 contains 1 shift/reduce conflicts.
state 42 contains 1 shift/reduce conflicts.
state 43 contains 1 shift/reduce conflicts.
state 64 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseCalc -> Exp                            (0)
	Exp -> int                                         (1)
	Exp -> string                                      (2)
	Exp -> var                                         (3)
	Exp -> '[' Exp ']'                                 (4)
	Exp -> Exp '|' Exp                                 (5)
	Exp -> Exp '++' Exp                                (6)
	Exp -> Exp PlusVar Exp                             (7)
	Exp -> Exp '+' Exp                                 (8)
	Exp -> Let '(' var ':' Type ')' '=' Exp            (9)
	Exp -> Clear '(' var ':' Type ')'                  (10)
	Exp -> ClearAll                                    (11)
	Exp -> '(' Exp ')'                                 (12)
	Exp -> Exp ';' Exp                                 (13)
	Exp -> Exp ';'                                     (14)
	Exp -> Print Exp                                   (15)
	Exp -> ReadFile string                             (16)
	Exp -> GetVars var                                 (17)
	Exp -> ReadEnv                                     (18)
	Exp -> Format Exp                                  (19)
	Exp -> FillBasePrefixReady var                     (20)
	Exp -> ProcSemicComma var                          (21)
	Exp -> Delimit string Exp In var                   (22)
	Exp -> Compare string var In string var            (23)
	Exp -> LiteralsNum var                             (24)
	Type -> Int                                        (25)
	Type -> String                                     (26)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	Int            { TokenTypeInt _ }
	String         { TokenTypeString _ }
	int            { TokenInt _ $$ }
	string         { TokenString _ $$ }
	'++'           { TokenPlusString _ }
	PlusVar        { TokenPlusVar _ }
	'+'            { TokenPlus _ }
	var            { TokenVar _ $$ }
	Let            { TokenLet _ }
	Print          { TokenPrint _ }
	Clear          { TokenClear _ }
	ClearAll       { TokenClearAll _ }
	':'            { TokenHasType _ }
	'='            { TokenEq _ }
	'('            { TokenLParen _ }
	')'            { TokenRParen _ }
	'['            { TokenLList _ }
	']'            { TokenRList _ }
	'|'            { TokenListSeg _ }
	';'            { TokenEnd _ }
	ReadFile       { TokenReadFile _ }
	GetVars        { TokenGetVar _ }
	ReadEnv        { TokenReadEnv _ }
	Format         { TokenFormat _ }
	FillBasePrefixReady{ TokenFillBasePrefixReady _ }
	ProcSemicComma { TokenProcSemicComma _ }
	Delimit        { TokenDelimit _ }
	Compare        { TokenCompare _ }
	In             { TokenIn _ }
	LiteralsNum    { TokenLiteralsNum _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseCalc rule  0
	Exp             rules 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
	Type            rules 25, 26

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseCalc -> . Exp                           (rule 0)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 3

State 1

	Exp -> . int                                        (rule 1)

	int            shift, and enter state 2


State 2

	Exp -> int .                                        (rule 1)

	'++'           reduce using rule 1
	PlusVar        reduce using rule 1
	'+'            reduce using rule 1
	')'            reduce using rule 1
	']'            reduce using rule 1
	'|'            reduce using rule 1
	';'            reduce using rule 1
	In             reduce using rule 1
	%eof           reduce using rule 1


State 3

	%start_parseCalc -> Exp .                           (rule 0)
	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	'|'            shift, and enter state 37
	';'            shift, and enter state 38
	%eof           accept


State 4

	Exp -> string .                                     (rule 2)

	'++'           reduce using rule 2
	PlusVar        reduce using rule 2
	'+'            reduce using rule 2
	')'            reduce using rule 2
	']'            reduce using rule 2
	'|'            reduce using rule 2
	';'            reduce using rule 2
	In             reduce using rule 2
	%eof           reduce using rule 2


State 5

	Exp -> var .                                        (rule 3)

	'++'           reduce using rule 3
	PlusVar        reduce using rule 3
	'+'            reduce using rule 3
	')'            reduce using rule 3
	']'            reduce using rule 3
	'|'            reduce using rule 3
	';'            reduce using rule 3
	In             reduce using rule 3
	%eof           reduce using rule 3


State 6

	Exp -> Let . '(' var ':' Type ')' '=' Exp           (rule 9)

	'('            shift, and enter state 33


State 7

	Exp -> Print . Exp                                  (rule 15)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 32

State 8

	Exp -> Clear . '(' var ':' Type ')'                 (rule 10)

	'('            shift, and enter state 31


State 9

	Exp -> ClearAll .                                   (rule 11)

	'++'           reduce using rule 11
	PlusVar        reduce using rule 11
	'+'            reduce using rule 11
	')'            reduce using rule 11
	']'            reduce using rule 11
	'|'            reduce using rule 11
	';'            reduce using rule 11
	In             reduce using rule 11
	%eof           reduce using rule 11


State 10

	Exp -> '(' . Exp ')'                                (rule 12)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 30

State 11

	Exp -> '[' . Exp ']'                                (rule 4)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 29

State 12

	Exp -> ReadFile . string                            (rule 16)

	string         shift, and enter state 28


State 13

	Exp -> GetVars . var                                (rule 17)

	var            shift, and enter state 27


State 14

	Exp -> ReadEnv .                                    (rule 18)

	'++'           reduce using rule 18
	PlusVar        reduce using rule 18
	'+'            reduce using rule 18
	')'            reduce using rule 18
	']'            reduce using rule 18
	'|'            reduce using rule 18
	';'            reduce using rule 18
	In             reduce using rule 18
	%eof           reduce using rule 18


State 15

	Exp -> Format . Exp                                 (rule 19)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 26

State 16

	Exp -> FillBasePrefixReady . var                    (rule 20)

	var            shift, and enter state 25


State 17

	Exp -> ProcSemicComma . var                         (rule 21)

	var            shift, and enter state 24


State 18

	Exp -> Delimit . string Exp In var                  (rule 22)

	string         shift, and enter state 23


State 19

	Exp -> Compare . string var In string var           (rule 23)

	string         shift, and enter state 22


State 20

	Exp -> LiteralsNum . var                            (rule 24)

	var            shift, and enter state 21


State 21

	Exp -> LiteralsNum var .                            (rule 24)

	'++'           reduce using rule 24
	PlusVar        reduce using rule 24
	'+'            reduce using rule 24
	')'            reduce using rule 24
	']'            reduce using rule 24
	'|'            reduce using rule 24
	';'            reduce using rule 24
	In             reduce using rule 24
	%eof           reduce using rule 24


State 22

	Exp -> Compare string . var In string var           (rule 23)

	var            shift, and enter state 49


State 23

	Exp -> Delimit string . Exp In var                  (rule 22)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 48

State 24

	Exp -> ProcSemicComma var .                         (rule 21)

	'++'           reduce using rule 21
	PlusVar        reduce using rule 21
	'+'            reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	'|'            reduce using rule 21
	';'            reduce using rule 21
	In             reduce using rule 21
	%eof           reduce using rule 21


State 25

	Exp -> FillBasePrefixReady var .                    (rule 20)

	'++'           reduce using rule 20
	PlusVar        reduce using rule 20
	'+'            reduce using rule 20
	')'            reduce using rule 20
	']'            reduce using rule 20
	'|'            reduce using rule 20
	';'            reduce using rule 20
	In             reduce using rule 20
	%eof           reduce using rule 20


State 26

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)
	Exp -> Format Exp .                                 (rule 19)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	')'            reduce using rule 19
	']'            reduce using rule 19
	'|'            shift, and enter state 37
			(reduce using rule 19)

	';'            reduce using rule 19
	In             reduce using rule 19
	%eof           reduce using rule 19


State 27

	Exp -> GetVars var .                                (rule 17)

	'++'           reduce using rule 17
	PlusVar        reduce using rule 17
	'+'            reduce using rule 17
	')'            reduce using rule 17
	']'            reduce using rule 17
	'|'            reduce using rule 17
	';'            reduce using rule 17
	In             reduce using rule 17
	%eof           reduce using rule 17


State 28

	Exp -> ReadFile string .                            (rule 16)

	'++'           reduce using rule 16
	PlusVar        reduce using rule 16
	'+'            reduce using rule 16
	')'            reduce using rule 16
	']'            reduce using rule 16
	'|'            reduce using rule 16
	';'            reduce using rule 16
	In             reduce using rule 16
	%eof           reduce using rule 16


State 29

	Exp -> '[' Exp . ']'                                (rule 4)
	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	']'            shift, and enter state 47
	'|'            shift, and enter state 37
	';'            shift, and enter state 38


State 30

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> '(' Exp . ')'                                (rule 12)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	')'            shift, and enter state 46
	'|'            shift, and enter state 37
	';'            shift, and enter state 38


State 31

	Exp -> Clear '(' . var ':' Type ')'                 (rule 10)

	var            shift, and enter state 45


State 32

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)
	Exp -> Print Exp .                                  (rule 15)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	')'            reduce using rule 15
	']'            reduce using rule 15
	'|'            shift, and enter state 37
			(reduce using rule 15)

	';'            reduce using rule 15
	In             reduce using rule 15
	%eof           reduce using rule 15


State 33

	Exp -> Let '(' . var ':' Type ')' '=' Exp           (rule 9)

	var            shift, and enter state 44


State 34

	Exp -> Exp '++' . Exp                               (rule 6)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 43

State 35

	Exp -> Exp PlusVar . Exp                            (rule 7)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 42

State 36

	Exp -> Exp '+' . Exp                                (rule 8)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 41

State 37

	Exp -> Exp '|' . Exp                                (rule 5)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 40

State 38

	Exp -> Exp ';' . Exp                                (rule 13)
	Exp -> Exp ';' .                                    (rule 14)

	int            shift, and enter state 2
	string         shift, and enter state 4
	'++'           reduce using rule 14
	PlusVar        reduce using rule 14
	'+'            reduce using rule 14
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	')'            reduce using rule 14
	'['            shift, and enter state 11
	']'            reduce using rule 14
	'|'            reduce using rule 14
	';'            reduce using rule 14
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	In             reduce using rule 14
	LiteralsNum    shift, and enter state 20
	%eof           reduce using rule 14

	Exp            goto state 39

State 39

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp ';' Exp .                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	')'            reduce using rule 13
	']'            reduce using rule 13
	'|'            shift, and enter state 37
			(reduce using rule 13)

	';'            reduce using rule 13
	In             reduce using rule 13
	%eof           reduce using rule 13


State 40

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp '|' Exp .                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           shift, and enter state 34
			(reduce using rule 5)

	PlusVar        shift, and enter state 35
			(reduce using rule 5)

	'+'            shift, and enter state 36
			(reduce using rule 5)

	')'            reduce using rule 5
	']'            reduce using rule 5
	'|'            shift, and enter state 37
			(reduce using rule 5)

	';'            shift, and enter state 38
			(reduce using rule 5)

	In             reduce using rule 5
	%eof           reduce using rule 5


State 41

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp '+' Exp .                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            reduce using rule 8
	')'            reduce using rule 8
	']'            reduce using rule 8
	'|'            shift, and enter state 37
			(reduce using rule 8)

	';'            reduce using rule 8
	In             reduce using rule 8
	%eof           reduce using rule 8


State 42

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp PlusVar Exp .                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           reduce using rule 7
	PlusVar        reduce using rule 7
	'+'            reduce using rule 7
	')'            reduce using rule 7
	']'            reduce using rule 7
	'|'            shift, and enter state 37
			(reduce using rule 7)

	';'            reduce using rule 7
	In             reduce using rule 7
	%eof           reduce using rule 7


State 43

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp '++' Exp .                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           reduce using rule 6
	PlusVar        shift, and enter state 35
	'+'            reduce using rule 6
	')'            reduce using rule 6
	']'            reduce using rule 6
	'|'            shift, and enter state 37
			(reduce using rule 6)

	';'            reduce using rule 6
	In             reduce using rule 6
	%eof           reduce using rule 6


State 44

	Exp -> Let '(' var . ':' Type ')' '=' Exp           (rule 9)

	':'            shift, and enter state 53


State 45

	Exp -> Clear '(' var . ':' Type ')'                 (rule 10)

	':'            shift, and enter state 52


State 46

	Exp -> '(' Exp ')' .                                (rule 12)

	'++'           reduce using rule 12
	PlusVar        reduce using rule 12
	'+'            reduce using rule 12
	')'            reduce using rule 12
	']'            reduce using rule 12
	'|'            reduce using rule 12
	';'            reduce using rule 12
	In             reduce using rule 12
	%eof           reduce using rule 12


State 47

	Exp -> '[' Exp ']' .                                (rule 4)

	'++'           reduce using rule 4
	PlusVar        reduce using rule 4
	'+'            reduce using rule 4
	')'            reduce using rule 4
	']'            reduce using rule 4
	'|'            reduce using rule 4
	';'            reduce using rule 4
	In             reduce using rule 4
	%eof           reduce using rule 4


State 48

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)
	Exp -> Delimit string Exp . In var                  (rule 22)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	'|'            shift, and enter state 37
	';'            shift, and enter state 38
	In             shift, and enter state 51


State 49

	Exp -> Compare string var . In string var           (rule 23)

	In             shift, and enter state 50


State 50

	Exp -> Compare string var In . string var           (rule 23)

	string         shift, and enter state 59


State 51

	Exp -> Delimit string Exp In . var                  (rule 22)

	var            shift, and enter state 58


State 52

	Exp -> Clear '(' var ':' . Type ')'                 (rule 10)

	Int            shift, and enter state 55
	String         shift, and enter state 56

	Type           goto state 57

State 53

	Exp -> Let '(' var ':' . Type ')' '=' Exp           (rule 9)

	Int            shift, and enter state 55
	String         shift, and enter state 56

	Type           goto state 54

State 54

	Exp -> Let '(' var ':' Type . ')' '=' Exp           (rule 9)

	')'            shift, and enter state 62


State 55

	Type -> Int .                                       (rule 25)

	')'            reduce using rule 25


State 56

	Type -> String .                                    (rule 26)

	')'            reduce using rule 26


State 57

	Exp -> Clear '(' var ':' Type . ')'                 (rule 10)

	')'            shift, and enter state 61


State 58

	Exp -> Delimit string Exp In var .                  (rule 22)

	'++'           reduce using rule 22
	PlusVar        reduce using rule 22
	'+'            reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	'|'            reduce using rule 22
	';'            reduce using rule 22
	In             reduce using rule 22
	%eof           reduce using rule 22


State 59

	Exp -> Compare string var In string . var           (rule 23)

	var            shift, and enter state 60


State 60

	Exp -> Compare string var In string var .           (rule 23)

	'++'           reduce using rule 23
	PlusVar        reduce using rule 23
	'+'            reduce using rule 23
	')'            reduce using rule 23
	']'            reduce using rule 23
	'|'            reduce using rule 23
	';'            reduce using rule 23
	In             reduce using rule 23
	%eof           reduce using rule 23


State 61

	Exp -> Clear '(' var ':' Type ')' .                 (rule 10)

	'++'           reduce using rule 10
	PlusVar        reduce using rule 10
	'+'            reduce using rule 10
	')'            reduce using rule 10
	']'            reduce using rule 10
	'|'            reduce using rule 10
	';'            reduce using rule 10
	In             reduce using rule 10
	%eof           reduce using rule 10


State 62

	Exp -> Let '(' var ':' Type ')' . '=' Exp           (rule 9)

	'='            shift, and enter state 63


State 63

	Exp -> Let '(' var ':' Type ')' '=' . Exp           (rule 9)

	int            shift, and enter state 2
	string         shift, and enter state 4
	var            shift, and enter state 5
	Let            shift, and enter state 6
	Print          shift, and enter state 7
	Clear          shift, and enter state 8
	ClearAll       shift, and enter state 9
	'('            shift, and enter state 10
	'['            shift, and enter state 11
	ReadFile       shift, and enter state 12
	GetVars        shift, and enter state 13
	ReadEnv        shift, and enter state 14
	Format         shift, and enter state 15
	FillBasePrefixReadyshift, and enter state 16
	ProcSemicComma shift, and enter state 17
	Delimit        shift, and enter state 18
	Compare        shift, and enter state 19
	LiteralsNum    shift, and enter state 20

	Exp            goto state 64

State 64

	Exp -> Exp . '|' Exp                                (rule 5)
	Exp -> Exp . '++' Exp                               (rule 6)
	Exp -> Exp . PlusVar Exp                            (rule 7)
	Exp -> Exp . '+' Exp                                (rule 8)
	Exp -> Let '(' var ':' Type ')' '=' Exp .           (rule 9)
	Exp -> Exp . ';' Exp                                (rule 13)
	Exp -> Exp . ';'                                    (rule 14)

	'++'           shift, and enter state 34
	PlusVar        shift, and enter state 35
	'+'            shift, and enter state 36
	')'            reduce using rule 9
	']'            reduce using rule 9
	'|'            shift, and enter state 37
			(reduce using rule 9)

	';'            reduce using rule 9
	In             reduce using rule 9
	%eof           reduce using rule 9


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 27
Number of terminals: 30
Number of non-terminals: 3
Number of states: 65
